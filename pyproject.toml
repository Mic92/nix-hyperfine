[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "nix-hyperfine"
version = "0.1.0"
description = "Benchmarks Nix build and evaluation times using hyperfine"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "nix-hyperfine contributors" }
]
requires-python = ">=3.12"
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: System :: Software Distribution",
]

[project.scripts]
nix-hyperfine = "nix_hyperfine:main"

[project.urls]
Homepage = "https://github.com/yourusername/nix-hyperfine"
Repository = "https://github.com/yourusername/nix-hyperfine"
Issues = "https://github.com/yourusername/nix-hyperfine/issues"

[tool.setuptools]
packages = ["nix_hyperfine"]

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # pyflakes
    "I",     # isort
    "B",     # flake8-bugbear
    "C4",    # flake8-comprehensions
    "UP",    # pyupgrade
    "ARG",   # flake8-unused-arguments
    "SIM",   # flake8-simplify
    "TID",   # flake8-tidy-imports
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true